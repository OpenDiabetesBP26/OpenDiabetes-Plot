"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const temp_directory_1 = __importDefault(require("../../../../../utils/temp-directory"));
const promisified_functions_1 = require("../../../../../utils/promisified-functions");
const mime_db_1 = __importDefault(require("mime-db"));
function getMimeTypes() {
    const mimeTypes = Object.keys(mime_db_1.default);
    return mimeTypes.filter(mimeType => {
        // @ts-ignore: Export of the 'mime-db' module has no index signature.
        const { extensions } = mime_db_1.default[mimeType];
        return extensions && extensions.length;
    }).join(',');
}
async function generatePreferences(profileDir, { marionettePort, config }) {
    const prefsFileName = path_1.default.join(profileDir, 'user.js');
    let prefs = [
        'user_pref("browser.link.open_newwindow.override.external", 2);',
        'user_pref("app.update.enabled", false);',
        'user_pref("app.update.auto", false);',
        'user_pref("app.update.mode", 0);',
        'user_pref("app.update.service.enabled", false);',
        'user_pref("browser.shell.checkDefaultBrowser", false);',
        'user_pref("browser.usedOnWindows10", true);',
        'user_pref("browser.rights.3.shown", true);',
        'user_pref("browser.startup.homepage_override.mstone","ignore");',
        'user_pref("browser.tabs.warnOnCloseOtherTabs", false);',
        'user_pref("browser.tabs.warnOnClose", false);',
        'user_pref("browser.sessionstore.resume_from_crash", false);',
        `user_pref("browser.helperApps.neverAsk.saveToDisk", "${getMimeTypes()}");`,
        `user_pref("pdfjs.disabled", true);`,
        'user_pref("toolkit.telemetry.reportingpolicy.firstRun", false);',
        'user_pref("toolkit.telemetry.enabled", false);',
        'user_pref("toolkit.telemetry.rejected", true);',
        'user_pref("datareporting.healthreport.uploadEnabled", false);',
        'user_pref("datareporting.healthreport.service.enabled", false);',
        'user_pref("datareporting.healthreport.service.firstRun", false);',
        'user_pref("datareporting.policy.dataSubmissionEnabled", false);',
        'user_pref("datareporting.policy.dataSubmissionPolicyBypassNotification", true);',
        'user_pref("app.shield.optoutstudies.enabled", false);',
        'user_pref("extensions.shield-recipe-client.enabled", false);',
        'user_pref("extensions.shield-recipe-client.first_run", false);',
        'user_pref("extensions.shield-recipe-client.startupExperimentPrefs.browser.newtabpage.activity-stream.enabled", false);',
        'user_pref("devtools.toolbox.host", "window");',
        'user_pref("devtools.toolbox.previousHost", "bottom");',
        'user_pref("signon.rememberSignons", false);'
    ];
    if (marionettePort) {
        prefs = prefs.concat([
            `user_pref("marionette.port", ${marionettePort});`,
            'user_pref("marionette.enabled", true);'
        ]);
    }
    if (config.disableMultiprocessing) {
        prefs = prefs.concat([
            'user_pref("browser.tabs.remote.autostart", false);',
            'user_pref("browser.tabs.remote.autostart.2", false);',
        ]);
    }
    await promisified_functions_1.writeFile(prefsFileName, prefs.join('\n'));
}
async function default_1(runtimeInfo) {
    const tmpDir = await temp_directory_1.default.createDirectory('firefox-profile');
    await generatePreferences(tmpDir.path, runtimeInfo);
    return tmpDir;
}
exports.default = default_1;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXRlbXAtcHJvZmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9icm93c2VyL3Byb3ZpZGVyL2J1aWx0LWluL2RlZGljYXRlZC9maXJlZm94L2NyZWF0ZS10ZW1wLXByb2ZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxnREFBd0I7QUFDeEIseUZBQWdFO0FBQ2hFLHNGQUF1RTtBQUN2RSxzREFBeUI7QUFFekIsU0FBUyxZQUFZO0lBQ2pCLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQUUsQ0FBQyxDQUFDO0lBRWxDLE9BQU8sU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRTtRQUMvQixxRUFBcUU7UUFDckUsTUFBTSxFQUFFLFVBQVUsRUFBRSxHQUFHLGlCQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFcEMsT0FBTyxVQUFVLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQztJQUMzQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDakIsQ0FBQztBQUVELEtBQUssVUFBVSxtQkFBbUIsQ0FBRSxVQUFrQixFQUFFLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBMkM7SUFDdkgsTUFBTSxhQUFhLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFFdkQsSUFBSSxLQUFLLEdBQUc7UUFDUixnRUFBZ0U7UUFDaEUseUNBQXlDO1FBQ3pDLHNDQUFzQztRQUN0QyxrQ0FBa0M7UUFDbEMsaURBQWlEO1FBQ2pELHdEQUF3RDtRQUN4RCw2Q0FBNkM7UUFDN0MsNENBQTRDO1FBQzVDLGlFQUFpRTtRQUNqRSx3REFBd0Q7UUFDeEQsK0NBQStDO1FBQy9DLDZEQUE2RDtRQUM3RCx3REFBd0QsWUFBWSxFQUFFLEtBQUs7UUFDM0Usb0NBQW9DO1FBQ3BDLGlFQUFpRTtRQUNqRSxnREFBZ0Q7UUFDaEQsZ0RBQWdEO1FBQ2hELCtEQUErRDtRQUMvRCxpRUFBaUU7UUFDakUsa0VBQWtFO1FBQ2xFLGlFQUFpRTtRQUNqRSxpRkFBaUY7UUFDakYsdURBQXVEO1FBQ3ZELDhEQUE4RDtRQUM5RCxnRUFBZ0U7UUFDaEUsd0hBQXdIO1FBQ3hILCtDQUErQztRQUMvQyx1REFBdUQ7UUFDdkQsNkNBQTZDO0tBQ2hELENBQUM7SUFFRixJQUFJLGNBQWMsRUFBRTtRQUNoQixLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztZQUNqQixnQ0FBZ0MsY0FBYyxJQUFJO1lBQ2xELHdDQUF3QztTQUMzQyxDQUFDLENBQUM7S0FDTjtJQUVELElBQUksTUFBTSxDQUFDLHNCQUFzQixFQUFFO1FBQy9CLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1lBQ2pCLG9EQUFvRDtZQUNwRCxzREFBc0Q7U0FDekQsQ0FBQyxDQUFDO0tBQ047SUFFRCxNQUFNLGlDQUFTLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBRWMsS0FBSyxvQkFBVyxXQUFnQjtJQUMzQyxNQUFNLE1BQU0sR0FBRyxNQUFNLHdCQUFhLENBQUMsZUFBZSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFFdEUsTUFBTSxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRXBELE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUM7QUFORCw0QkFNQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IFRlbXBEaXJlY3RvcnkgZnJvbSAnLi4vLi4vLi4vLi4vLi4vdXRpbHMvdGVtcC1kaXJlY3RvcnknO1xuaW1wb3J0IHsgd3JpdGVGaWxlIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdXRpbHMvcHJvbWlzaWZpZWQtZnVuY3Rpb25zJztcbmltcG9ydCBkYiBmcm9tICdtaW1lLWRiJztcblxuZnVuY3Rpb24gZ2V0TWltZVR5cGVzICgpOiBzdHJpbmcge1xuICAgIGNvbnN0IG1pbWVUeXBlcyA9IE9iamVjdC5rZXlzKGRiKTtcblxuICAgIHJldHVybiBtaW1lVHlwZXMuZmlsdGVyKG1pbWVUeXBlID0+IHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZTogRXhwb3J0IG9mIHRoZSAnbWltZS1kYicgbW9kdWxlIGhhcyBubyBpbmRleCBzaWduYXR1cmUuXG4gICAgICAgIGNvbnN0IHsgZXh0ZW5zaW9ucyB9ID0gZGJbbWltZVR5cGVdO1xuXG4gICAgICAgIHJldHVybiBleHRlbnNpb25zICYmIGV4dGVuc2lvbnMubGVuZ3RoO1xuICAgIH0pLmpvaW4oJywnKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVQcmVmZXJlbmNlcyAocHJvZmlsZURpcjogc3RyaW5nLCB7IG1hcmlvbmV0dGVQb3J0LCBjb25maWcgfTogeyBtYXJpb25ldHRlUG9ydDogbnVtYmVyOyBjb25maWc6IGFueSB9KTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgcHJlZnNGaWxlTmFtZSA9IHBhdGguam9pbihwcm9maWxlRGlyLCAndXNlci5qcycpO1xuXG4gICAgbGV0IHByZWZzID0gW1xuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci5saW5rLm9wZW5fbmV3d2luZG93Lm92ZXJyaWRlLmV4dGVybmFsXCIsIDIpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJhcHAudXBkYXRlLmVuYWJsZWRcIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJhcHAudXBkYXRlLmF1dG9cIiwgZmFsc2UpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJhcHAudXBkYXRlLm1vZGVcIiwgMCk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImFwcC51cGRhdGUuc2VydmljZS5lbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci5zaGVsbC5jaGVja0RlZmF1bHRCcm93c2VyXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci51c2VkT25XaW5kb3dzMTBcIiwgdHJ1ZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImJyb3dzZXIucmlnaHRzLjMuc2hvd25cIiwgdHJ1ZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImJyb3dzZXIuc3RhcnR1cC5ob21lcGFnZV9vdmVycmlkZS5tc3RvbmVcIixcImlnbm9yZVwiKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci50YWJzLndhcm5PbkNsb3NlT3RoZXJUYWJzXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci50YWJzLndhcm5PbkNsb3NlXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiYnJvd3Nlci5zZXNzaW9uc3RvcmUucmVzdW1lX2Zyb21fY3Jhc2hcIiwgZmFsc2UpOycsXG4gICAgICAgIGB1c2VyX3ByZWYoXCJicm93c2VyLmhlbHBlckFwcHMubmV2ZXJBc2suc2F2ZVRvRGlza1wiLCBcIiR7Z2V0TWltZVR5cGVzKCl9XCIpO2AsXG4gICAgICAgIGB1c2VyX3ByZWYoXCJwZGZqcy5kaXNhYmxlZFwiLCB0cnVlKTtgLFxuICAgICAgICAndXNlcl9wcmVmKFwidG9vbGtpdC50ZWxlbWV0cnkucmVwb3J0aW5ncG9saWN5LmZpcnN0UnVuXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwidG9vbGtpdC50ZWxlbWV0cnkuZW5hYmxlZFwiLCBmYWxzZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcInRvb2xraXQudGVsZW1ldHJ5LnJlamVjdGVkXCIsIHRydWUpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJkYXRhcmVwb3J0aW5nLmhlYWx0aHJlcG9ydC51cGxvYWRFbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZGF0YXJlcG9ydGluZy5oZWFsdGhyZXBvcnQuc2VydmljZS5lbmFibGVkXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZGF0YXJlcG9ydGluZy5oZWFsdGhyZXBvcnQuc2VydmljZS5maXJzdFJ1blwiLCBmYWxzZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImRhdGFyZXBvcnRpbmcucG9saWN5LmRhdGFTdWJtaXNzaW9uRW5hYmxlZFwiLCBmYWxzZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImRhdGFyZXBvcnRpbmcucG9saWN5LmRhdGFTdWJtaXNzaW9uUG9saWN5QnlwYXNzTm90aWZpY2F0aW9uXCIsIHRydWUpOycsXG4gICAgICAgICd1c2VyX3ByZWYoXCJhcHAuc2hpZWxkLm9wdG91dHN0dWRpZXMuZW5hYmxlZFwiLCBmYWxzZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImV4dGVuc2lvbnMuc2hpZWxkLXJlY2lwZS1jbGllbnQuZW5hYmxlZFwiLCBmYWxzZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImV4dGVuc2lvbnMuc2hpZWxkLXJlY2lwZS1jbGllbnQuZmlyc3RfcnVuXCIsIGZhbHNlKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZXh0ZW5zaW9ucy5zaGllbGQtcmVjaXBlLWNsaWVudC5zdGFydHVwRXhwZXJpbWVudFByZWZzLmJyb3dzZXIubmV3dGFicGFnZS5hY3Rpdml0eS1zdHJlYW0uZW5hYmxlZFwiLCBmYWxzZSk7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcImRldnRvb2xzLnRvb2xib3guaG9zdFwiLCBcIndpbmRvd1wiKTsnLFxuICAgICAgICAndXNlcl9wcmVmKFwiZGV2dG9vbHMudG9vbGJveC5wcmV2aW91c0hvc3RcIiwgXCJib3R0b21cIik7JyxcbiAgICAgICAgJ3VzZXJfcHJlZihcInNpZ25vbi5yZW1lbWJlclNpZ25vbnNcIiwgZmFsc2UpOydcbiAgICBdO1xuXG4gICAgaWYgKG1hcmlvbmV0dGVQb3J0KSB7XG4gICAgICAgIHByZWZzID0gcHJlZnMuY29uY2F0KFtcbiAgICAgICAgICAgIGB1c2VyX3ByZWYoXCJtYXJpb25ldHRlLnBvcnRcIiwgJHttYXJpb25ldHRlUG9ydH0pO2AsXG4gICAgICAgICAgICAndXNlcl9wcmVmKFwibWFyaW9uZXR0ZS5lbmFibGVkXCIsIHRydWUpOydcbiAgICAgICAgXSk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5kaXNhYmxlTXVsdGlwcm9jZXNzaW5nKSB7XG4gICAgICAgIHByZWZzID0gcHJlZnMuY29uY2F0KFtcbiAgICAgICAgICAgICd1c2VyX3ByZWYoXCJicm93c2VyLnRhYnMucmVtb3RlLmF1dG9zdGFydFwiLCBmYWxzZSk7JyxcbiAgICAgICAgICAgICd1c2VyX3ByZWYoXCJicm93c2VyLnRhYnMucmVtb3RlLmF1dG9zdGFydC4yXCIsIGZhbHNlKTsnLFxuICAgICAgICBdKTtcbiAgICB9XG5cbiAgICBhd2FpdCB3cml0ZUZpbGUocHJlZnNGaWxlTmFtZSwgcHJlZnMuam9pbignXFxuJykpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiAocnVudGltZUluZm86IGFueSk6IFByb21pc2U8VGVtcERpcmVjdG9yeT4ge1xuICAgIGNvbnN0IHRtcERpciA9IGF3YWl0IFRlbXBEaXJlY3RvcnkuY3JlYXRlRGlyZWN0b3J5KCdmaXJlZm94LXByb2ZpbGUnKTtcblxuICAgIGF3YWl0IGdlbmVyYXRlUHJlZmVyZW5jZXModG1wRGlyLnBhdGgsIHJ1bnRpbWVJbmZvKTtcblxuICAgIHJldHVybiB0bXBEaXI7XG59XG4iXX0=